20250722 
✅ 1. 오늘 학습한 내용 요약 정리
📌 웹 서버 vs WAS
웹 서버: 정적 콘텐츠 제공 (HTML, CSS, JS, 이미지 등), 클라이언트 요청 직접 응답
예시: Apache, Nginx
WAS (Web Application Server): 동적 콘텐츠 처리 (로그인, DB 연동 등), 웹 서버와 구분하여 사용하면 부담 분산
예시: Tomcat, JBoss
📌 Model1 vs Model2
Model1: JSP + JavaBeans 조합
장점: 개발 빠름
단점: View와 Controller가 섞여 유지보수 어려움
Model2 (MVC 구조): JSP + 서블릿 + JavaBeans
장점: 모듈화, 유지보수 용이, Controller/View 분리
📌 MVC 패턴
Model: 비즈니스 로직, DB 관련 처리
View: 사용자에게 출력되는 UI 담당
Controller: 클라이언트 요청 → Model 호출 → View 선택
📌 Spring MVC 동작 흐름
요청: 클라이언트 요청 → DispatcherServlet이 받음
Controller 호출: DispatcherServlet → HandlerMapping → Controller → HandlerAdapter → Controller 메서드 실행
응답 생성:
Controller → ModelAndView 반환
DispatcherServlet → ViewResolver 통해 View 결정
View 객체(JSP 등) → 결과 렌더링 → 클라이언트 응답 완료
✅ DispatcherServlet은 Spring MVC의 중심 객체로, 전체 흐름을 조율함.
✅ 2. 연습문제 정답 채점
문제 번호	사용자의 답	정답 여부
1번	5	✅ 정답
2번	1	✅ 정답
3번	4, 5	✅ 정답
4번	1	✅ 정답
5번	3	✅ 정답
🎉 총 5문제 중 5문제 정답! 전부 맞췄어요. 완벽하게 이해하고 계시네요.
✅ 3. 복습용 퀴즈 (OX & 객관식 혼합)
Q1. (OX) 웹 서버는 데이터베이스와의 통신을 담당하는 서버이다.
❌
Q2. (객관식) 다음 중 Model2 아키텍처의 특징으로 옳은 것은?
① 개발 속도가 빠르지만 유지보수가 어렵다
② JSP와 JavaBeans만으로 구성된다
③ Controller와 View가 섞여 있다
④ 기능별로 모듈화되어 유지보수가 쉽다
정답: ④
Q3. (객관식) MVC 패턴에서 View의 역할은?
① 클라이언트 요청을 받아 처리
② 데이터베이스 연동 및 로직 처리
③ 사용자에게 결과를 출력
④ 전체 흐름을 제어
정답: ③
Q4. (OX) DispatcherServlet은 클라이언트 요청을 분석하고 적절한 Controller를 직접 실행한다.
❌ (→ HandlerMapping, HandlerAdapter를 통해 실행함)
Q5. (객관식) Spring MVC에서 Controller가 클라이언트 요청을 처리한 후 결과를 담아 전달하는 객체는?
① DispatcherServlet
② HandlerAdapter
③ ModelAndView
④ ViewResolver
정답: ③

------------------------------------

20250716
🧠 Docker Warm-Up 퀴즈

1. (OX 문제)
Docker의 가장 큰 장점 중 하나는 이식성으로, 어떤 환경에서도 동일하게 실행할 수 있도록 도와준다.

정답: O
2. (객관식)
도커에서 말하는 컨테이너(Container) 란 무엇인가?
A. 리눅스 커널의 별칭
B. 하나의 독립적인 실행 환경
C. 가상 머신
D. 이미지의 이름

정답: B
3. (단답형)
컨테이너를 실행하면 자동으로 할당되는 네트워크 주소는 무엇인가요?

정답: IP 주소
4. (OX 문제)
하나의 컨테이너에서 다른 컨테이너의 디스크에 직접 접근할 수 있다.

정답: X
5. (객관식)
아래 설명 중 도커 이미지(Image) 에 대한 설명으로 옳지 않은 것은?
A. 실행 가능한 프로그램의 설치 및 설정을 포함한다
B. 컨테이너를 생성하기 위한 기반이다
C. 실행 중에 상태가 저장된다
D. 버전 정보까지 포함할 수 있다

정답: C (이미지는 상태가 변하지 않음, 실행 상태는 컨테이너에서 관리됨)
6. (단답형)
다음 명령어는 어떤 동작을 하나요?

docker run --name webserver -d -p 80:80 nginx
정답 예시: nginx 이미지를 실행해서 'webserver'라는 이름의 컨테이너를 백그라운드에서 실행하고, 80번 포트를 외부에 개방한다
7. (객관식)
아래 중 브라우저에서 포트 번호를 입력하지 않아도 통신이 가능한 이유는?
A. 브라우저가 임의로 포트를 지정하기 때문
B. 운영체제가 포트를 매핑하기 때문
C. 브라우저가 기본적으로 80번 포트를 사용하기 때문
D. DNS가 포트를 결정하기 때문

정답: C
8. (OX 문제)
도커는 각 컨테이너에 고유한 포트를 할당하지 않고, 모든 컨테이너가 동일한 포트를 공유한다.

정답: X
9. (객관식)
다음 중 well-known port가 아닌 것은?
A. 22
B. 80
C. 443
D. 8080

정답: D
10. (단답형)
docker stop webserver 명령어의 목적은 무엇인가요?

정답 예시: webserver라는 이름의 컨테이너를 정지한다

------------------------------------------------------------

✅ 예외 처리 복습 퀴즈

🧩 기본 개념
1. (OX)
자바에서 예외는 객체이며, 모든 예외의 최상위 부모 클래스는 Throwable이다.

정답: O
2. (객관식)
다음 중 애플리케이션에서 복구가 불가능한 예외는 무엇인가?
A. Exception
B. Error
C. RuntimeException
D. IOException

정답: B
3. (OX)
RuntimeException은 체크 예외에 포함된다.

정답: X
4. (단답형)
throw 키워드는 예외를 ( ) 시킬 때 사용한다.

정답: 발생
5. (객관식)
다음 중 자바 예외 처리 키워드가 아닌 것은?
A. try
B. throw
C. catch
D. check

정답: D
🧩 예외 처리 흐름
6. (객관식)
connect() 메서드가 실패하면 반드시 send()를 호출하지 않아야 하는 이유는?
A. 프로그램이 종료되기 때문
B. 이미 데이터가 전송됐기 때문
C. 연결되지 않은 상태에서 데이터를 전송하면 오류가 발생하기 때문
D. 메모리를 많이 쓰기 때문

정답: C
7. (OX)
disconnect()는 connect() 또는 send()에서 오류가 발생해도 반드시 호출되어야 한다.

정답: O
8. (객관식)
NetworkClientV1에서 입력 문자열에 따라 오류를 설정하는 메서드는?
A. sendError()
B. errorCheck()
C. initError(String data)
D. validate(String data)

정답: C
9. (단답형)
다음 중 connect()와 send() 중 하나라도 실패하면 disconnect()를 호출하지 못하는 문제를 해결한 코드 버전은?

정답: NetworkServiceV1_3
10. (객관식)
다음 중 NetworkServiceV1_2와 V1_3의 차이점으로 가장 적절한 것은?
A. V1_2는 에러 메시지를 출력하지 않음
B. V1_3은 항상 disconnect()를 호출함
C. V1_2는 initError()를 호출하지 않음
D. V1_3은 send()를 먼저 호출함

정답: B
🧩 자바 예외 계층과 처리 방식
11. (객관식)
Exception을 상속받은 사용자 정의 예외는 기본적으로 어떤 예외인가?
A. 언체크 예외
B. 시스템 예외
C. 체크 예외
D. 무시 가능한 예외

정답: C
12. (단답형)
예외를 발생시키려면 new 예외클래스()와 throw 키워드를 함께 사용해야 한다.
예: throw new ( );

정답: MyCheckedException
13. (객관식)
다음 중 체크 예외를 반드시 처리해야 하는 방식이 아닌 것은?
A. try-catch로 처리
B. throws로 밖으로 던짐
C. 아무 처리 없이 무시함
D. 위 두 방식 중 하나

정답: C
14. (OX)
Exception을 catch 하면 그 하위 예외들도 함께 처리할 수 있다.

정답: O
15. (단답형)
예외 객체의 메시지를 확인하기 위해 사용하는 메서드는?

정답: getMessage()
